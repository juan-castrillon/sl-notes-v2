<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shell on SL Notebook</title><link>https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/</link><description>Recent content in Shell on SL Notebook</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 15 Jun 2025 17:08:25 +0200</lastBuildDate><atom:link href="https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>Vim</title><link>https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/vim/</link><pubDate>Sun, 15 Jun 2025 17:08:25 +0200</pubDate><guid>https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/vim/</guid><description>Vim (Vi IMproved) is a powerful, modal text editor commonly found on Unix-like systems. Unlike most text editors, Vim operates in different modes, each optimized for a specific type of interaction—editing, navigating, or executing commands.
The Three Primary Modes Vim operates in three core modes:
1. Normal Mode (Command Mode) This is the default mode when opening a file. In this mode, text is not directly inserted. Instead, keystrokes are interpreted as commands for navigating, copying, deleting, or manipulating text.</description></item><item><title>Customization</title><link>https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/customization/</link><pubDate>Thu, 29 May 2025 21:57:06 +0200</pubDate><guid>https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/customization/</guid><description>The shell can be customized in all possible ways to facilitate work and save time.
Prompt Customization (Bash) To setup a custom prompt in bash, the environment variable PS1 is used. One can temporarily set it up to other values to try out, but to make it persistent the variable needs to be editted in .bashrc
Tip Alternatively, tools like this can be used
Documentation about available options can be found here</description></item><item><title>I/O Redirection</title><link>https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/io-redirection/</link><pubDate>Sat, 14 Jan 2023 11:35:55 +0100</pubDate><guid>https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/io-redirection/</guid><description>In Linux, every process that runs in a shell interacts with three essential data streams: input, output, and error. These streams are the foundation of I/O redirection, which allows control over how data flows into and out of commands.
The Three Standard Streams Linux associates three standard streams with every process:
1. Standard Input (STDIN) – File Descriptor 0 STDIN is the source of input data for commands. By default, this comes from the keyboard.</description></item><item><title>Tmux</title><link>https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/tmux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://slnotes.blog.castrillon.ch/linux/using-a-linux-system/shell/tmux/</guid><description>Tmux is an application that allows the creation of different terminals inside a single shell (terminal multiplexer). It provides several benefits like:
Persistent SSH sessions: Specially practical when connecting to remote servers, tmux sessions will remain even if ssh connection is lost, as long as the machine is not turned off Terminal management: Sessions can have several windows (tabs) and each window supports several panes. THese split terminals can display information simultaneously and be &amp;ldquo;grouped&amp;rdquo; to execute the same command at the same time.</description></item></channel></rss>