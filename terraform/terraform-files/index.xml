<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Terraform Files on SL Notebook</title><link>https://slnotes.blog.castrillon.ch/terraform/terraform-files/</link><description>Recent content in Terraform Files on SL Notebook</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 01 Nov 2023 08:56:20 +0100</lastBuildDate><atom:link href="https://slnotes.blog.castrillon.ch/terraform/terraform-files/index.xml" rel="self" type="application/rss+xml"/><item><title>Providers</title><link>https://slnotes.blog.castrillon.ch/terraform/terraform-files/providers/</link><pubDate>Wed, 01 Nov 2023 08:56:20 +0100</pubDate><guid>https://slnotes.blog.castrillon.ch/terraform/terraform-files/providers/</guid><description>Providers are used to interact with the APIs of various platforms. They are used to create, update and delete resources.
Some include:
Cloud providers (AWS, Azure, GCP) Databases (MySQL, PostgreSQL) SaaS Platforms (GitHub, Datadog, PagerDuty) They are separate plugins and are downloaded when running terraform init
TO get an overview of the providers used by a module, run terraform providers
Tier They are divided into three tiers:
Official: maintained by HashiCorp Verified: maintained by a partner of HashiCorp Community: maintained by the community (no guarantee of maintenance) Registry The Terraform Registry is a public index of providers and modules.</description></item><item><title>Provisioners</title><link>https://slnotes.blog.castrillon.ch/terraform/terraform-files/provisioners/</link><pubDate>Mon, 30 Oct 2023 19:03:20 +0100</pubDate><guid>https://slnotes.blog.castrillon.ch/terraform/terraform-files/provisioners/</guid><description>Provisioners are used to execute scripts on a local or remote machine as part of the resource creation or destruction process. (After the resource is created or destroyed)
General options are:
cloud-init Packer Should be avoided if possible. Terraform is not a configuration management tool. Provisioners do things that do not reflect in the state file. This can lead to inconsistencies between the state file and the actual infrastructure. Terraform recommends cloud-init where possible.</description></item><item><title>Basics</title><link>https://slnotes.blog.castrillon.ch/terraform/terraform-files/basics/</link><pubDate>Sat, 28 Oct 2023 11:47:46 +0200</pubDate><guid>https://slnotes.blog.castrillon.ch/terraform/terraform-files/basics/</guid><description>providers terraform providers are responsible for understanding API interactions and exposing resources they are configured within the terraform block (version) and the provider block (specific provider configuration) input variables variables are used to parameterize terraform configurations they can be read from different sources: command line flags environment variables files (e.g. tfvars) locals locals are variables that are only used within the configuration they are not exposed to the outside world outputs outputs are used to expose information about the infrastructure they can be read from the state file they can be used as input for other configurations</description></item></channel></rss>