<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on SL Notebook</title><link>https://slnotes.blog.castrillon.ch/</link><description>Recent content in Notes on SL Notebook</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 06 Jul 2025 14:48:59 +0200</lastBuildDate><atom:link href="https://slnotes.blog.castrillon.ch/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux</title><link>https://slnotes.blog.castrillon.ch/linux/</link><pubDate>Sun, 06 Jul 2025 14:48:59 +0200</pubDate><guid>https://slnotes.blog.castrillon.ch/linux/</guid><description>Linux is an open source operating system (OS). An operating system is the software that directly manages a systemâ€™s hardware and resources, like CPU, memory, and storage. The OS sits between applications and hardware and makes the connections between all of your software and the physical resources that do the work.
In particular Linux provides the kernel, on top of which all different OS (Distributions) are built. The linux kernel acts like a &amp;ldquo;glue&amp;rdquo; between software and hardware, allowing the applications to talk to the underlying physical devices.</description></item><item><title>Kubernetes</title><link>https://slnotes.blog.castrillon.ch/k8s/</link><pubDate>Thu, 29 May 2025 17:52:39 +0200</pubDate><guid>https://slnotes.blog.castrillon.ch/k8s/</guid><description>Kubernetes in a container orchestration tool that allows easy configuration, deployment and management of high volume containerized workload and services.
It was developed by Google,first as an internal product and then made public as part of the Linux Foundation.
Why Orchestration? When dealing with containers in production, normally deployment conditions and dependencies are complex. These can include:
Multiple instances required Dynamic scaling required (More use, more instances) Complex inter-container interaction required Inter-container dependencies (One needs another one to work) Resource Management Load distribution Reliability (if one container goes down another should come up) Multiple hosts Orchestration solutions tackle this and many other scenarios and abstract container management.</description></item><item><title>Ansible</title><link>https://slnotes.blog.castrillon.ch/ansible/</link><pubDate>Tue, 13 May 2025 08:08:43 +0200</pubDate><guid>https://slnotes.blog.castrillon.ch/ansible/</guid><description>Ansible is a configuration management tool whose main purpose is to help automatically provision servers
In a standard architecture, a machine (called an ansible control host) serves as a middle man between the operator of ansible (me) and the servers to provision. This control host connects directly to the servers (via SSH) and issues commands to provision them.
An alternative to this, is to have the operator workstation (my laptop), act as a control host directly, skipping the machine in the middle.</description></item><item><title>Terraform</title><link>https://slnotes.blog.castrillon.ch/terraform/</link><pubDate>Tue, 21 Nov 2023 18:08:56 +0100</pubDate><guid>https://slnotes.blog.castrillon.ch/terraform/</guid><description/></item><item><title>Go</title><link>https://slnotes.blog.castrillon.ch/go/</link><pubDate>Thu, 16 Feb 2023 19:42:50 +0100</pubDate><guid>https://slnotes.blog.castrillon.ch/go/</guid><description/></item><item><title>Git</title><link>https://slnotes.blog.castrillon.ch/git/</link><pubDate>Thu, 02 Feb 2023 18:37:18 +0100</pubDate><guid>https://slnotes.blog.castrillon.ch/git/</guid><description>What is? Git is a version control system. In other words it registers changes on a set of files.
Good to know Git uses SHA-1 to reference a version of a file or files.
Basic Workflow The basic workflow of Git is based on 3 states that files can be at:
The file (or files) are in the working directory, where they are modified Changes (modified files) are added to the staging area Staged changes are then committed to the git repository.</description></item><item><title>Azure</title><link>https://slnotes.blog.castrillon.ch/azure/</link><pubDate>Fri, 23 Dec 2022 16:31:23 +0100</pubDate><guid>https://slnotes.blog.castrillon.ch/azure/</guid><description/></item></channel></rss>