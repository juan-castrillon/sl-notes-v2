<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Commands on SL Notebook</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/index.html</link><description>Recent content in Commands on SL Notebook</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 12 Apr 2025 15:27:54 +0200</lastBuildDate><atom:link href="https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/index.xml" rel="self" type="application/rss+xml"/><item><title>Namespaces</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/namespaces/index.html</link><pubDate>Sat, 12 Apr 2025 15:27:54 +0200</pubDate><guid>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/namespaces/index.html</guid><description>Imperative Create namespace kubectl create namespace dev-ns</description></item><item><title>Services</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/services/index.html</link><pubDate>Sat, 12 Apr 2025 15:15:17 +0200</pubDate><guid>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/services/index.html</guid><description>Imperative Create service for an existing pod kubectl expose pod pod_name --port=port --name service_name # By default, ClusterIP kubectl expose pod pod_name --port=port --target-port=tp --name service_name kubectl expose pod pod_name --type=NodePort --port=port --name service_name # Port on node will be random, if this is not ok, it has to be done with a file kubectl create service clusterip service_name --tcp=port:tp # Will not use the labels on a pod as selectors, but will search for labels app=service_name Get service kubectl get svc Create service YAML File kubectl expose pod pod_name --port=port --name service_name --dry-run=client -o yaml kubectl create service clusterip service_name --tcp=port:tp --dry-run=client -o yaml</description></item><item><title>ReplicaSets</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/replicasets/index.html</link><pubDate>Sat, 12 Apr 2025 14:28:14 +0200</pubDate><guid>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/replicasets/index.html</guid><description>Get Replica Sets kubectl get replicaset kubectl get rs Get single replica set kubectl describe replicaset rs_name Imperative Scale replica set ad-hoc kubectl scale --replicas=6 replicaset rs_name Imperative Destroy replica set kubectl delete replicaset rs_name</description></item><item><title>Pods</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/pods/index.html</link><pubDate>Sat, 12 Apr 2025 14:28:04 +0200</pubDate><guid>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/pods/index.html</guid><description>Get all pods kubectl get pods kubectl get pods -o wide # Adds more info like ip Get single pod kubectl describe pod pod_name Generate POD Manifest YAML file kubectl run pod_name --image=img --dry-run=client -o yaml Imperative Run pod ad-hoc kubectl run pod_name --image image_name kubectl run pod_name --image=image_name --labels=&amp;#34;k1=v1,k2=v2&amp;#34; kubectl run pod_name --image=image_name --port=80 --expose=true # Create a service directly Imperative Destroy pod kubectl delete pod pod_name</description></item><item><title>Deployments</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/deployments/index.html</link><pubDate>Sat, 12 Apr 2025 14:27:41 +0200</pubDate><guid>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/deployments/index.html</guid><description>Imperative Create Deployment kubectl create deployment --image=img d_name kubectl create deployment --image=img d_name --replicas=4 # Create with +1 replicas Generate Deployment YAML file kubectl create deployment --image=img --dry-run=client -o yaml Imperative Scale deployment kubectl scale deployment d_name --replicas=4 See rollout status (following logs) kubectl rollout status deployments/d_name See revision history kubectl rollout history deployments/d_name Imperative Rollback to previous revision kubectl rollout undo deployments/d_name Imperative Change deployment image ad-hoc kubectl set image deployments/d_name cont_name=image</description></item><item><title>General</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/general/index.html</link><pubDate>Sat, 12 Apr 2025 13:27:59 +0200</pubDate><guid>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/general/index.html</guid><description>Imperative vs Declarative management commands In K8s, there is three paradigms to manage general resources:
Imperative approach with commands: Using kubectl commands like run, create, edit, expose, scale to perform operations Imperative approach using a configuration file: Using kubectl commands like create, replace and delete with -f options Declarative approach using a configuration file: Using kubectl apply -f kubectl apply In general, due to best practices like maintainability, repeatability and documentation, the declarative approach (Using kubectl apply is preferred).</description></item></channel></rss>