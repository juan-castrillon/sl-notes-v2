<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on SL Notebook</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/index.html</link><description>Recent content in Kubernetes on SL Notebook</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 12 Oct 2024 16:42:53 +0200</lastBuildDate><atom:link href="https://juan-castrillon.github.io/sl-notes-v2/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>Command Cheat Sheet</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/index.html</link><pubDate>Sat, 12 Oct 2024 16:42:53 +0200</pubDate><guid>https://juan-castrillon.github.io/sl-notes-v2/k8s/commands/index.html</guid><description>Deployments See rollout status (following logs) kubectl rollout status deployments/d_name See revision history kubectl rollout history deployments/d_name Rollback to previous revision kubectl rollout undo deployments/d_name Change deployment image ad-hoc kubectl set image deployments/d_name cont_name=image General Create resource from YAML kubectl create -f res.yaml kubectl apply -f res.yaml # Can be run in an existing resource without failing Edit existing object definition in place kubectl edit object_type object_name # Does not edit a YAML definition if there is one kubectl replace -f res.</description></item><item><title>Concepts</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/concepts/index.html</link><pubDate>Sat, 12 Oct 2024 11:36:45 +0200</pubDate><guid>https://juan-castrillon.github.io/sl-notes-v2/k8s/concepts/index.html</guid><description>Pods Pods are the smallest deployable unit in K8s. They are a &amp;ldquo;logical&amp;rdquo; grouping that encapsulates containers that are to be managed via Kubernetes.
Pods can contain one container (standard use case) or multiple ones that are somehow bundled together (e.g sidecar containers). All containers in the pod share:
Network (can reach each other with localhost) Storage Host (co-located) Schedule (lifecycles are tied to one another) In general, pods are thought to be volatile and replaceable.</description></item><item><title>Background: Containers</title><link>https://juan-castrillon.github.io/sl-notes-v2/k8s/docker/index.html</link><pubDate>Sat, 12 Oct 2024 10:40:40 +0200</pubDate><guid>https://juan-castrillon.github.io/sl-notes-v2/k8s/docker/index.html</guid><description>Containers are an OS abstraction that allows to solve the following problems:
Multiple services have different dependencies: Libraries that need to be installed at the OS level are most of the times required to run software on machines. Its not rare that two softwares that run together in a server, might need different versions of the same library, or conflicting libraries to work. Environments are different: When developing software its very difficult to guarantee that the development environment (e.</description></item></channel></rss>