<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>App Configuration on SL Notebook</title><link>https://slnotes.blog.castrillon.ch/k8s/appconfig/</link><description>Recent content in App Configuration on SL Notebook</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 29 May 2025 17:42:03 +0200</lastBuildDate><atom:link href="https://slnotes.blog.castrillon.ch/k8s/appconfig/index.xml" rel="self" type="application/rss+xml"/><item><title>Multi-Container Pods</title><link>https://slnotes.blog.castrillon.ch/k8s/appconfig/multi/</link><pubDate>Thu, 29 May 2025 17:42:03 +0200</pubDate><guid>https://slnotes.blog.castrillon.ch/k8s/appconfig/multi/</guid><description>It is clear from the spec.containers being an array, that a pod can be defined with multiple containers inside. Two or more containers that are in the same pod share:
Lifecycle: Created and terminated together Network space: All containers share a network space, and can find each other using localhost Storage volumes: ALl containers have access to the same volumes which can be ued to transfer files between them This configuration is common to enable patterns like sidecar containers (e.</description></item><item><title>Environment Variables</title><link>https://slnotes.blog.castrillon.ch/k8s/appconfig/env/</link><pubDate>Thu, 29 May 2025 16:53:54 +0200</pubDate><guid>https://slnotes.blog.castrillon.ch/k8s/appconfig/env/</guid><description>As most applications tend to follow the 12 factor config standard, setting environment variables becomes important to configure the applications. In K8s,there is 3 ways of setting them
Environment Variables in pod spec As part of the pod definition, one can set environment variables that will be made available inside the container (similar to using the -e flag in docker):
apiVersion: v1 kind: Pod metadata: name: simple-webapp-color spec: containers: - name: simple-webapp-color image: simple-webapp-color ports: - containerPort: 80 env: - name: APP_COLOR value: blue - name: APP_MODE value: prodConfigMap ConfigMap objects can be mounted as environment variables for containers.</description></item><item><title>Commands and arguments</title><link>https://slnotes.blog.castrillon.ch/k8s/appconfig/commands/</link><pubDate>Thu, 29 May 2025 16:31:53 +0200</pubDate><guid>https://slnotes.blog.castrillon.ch/k8s/appconfig/commands/</guid><description>As most applications run as containers when deployed in a K8s cluster, one can define custom commands and arguments to run the container.
In this sense, a parallel can be drawn to configuring a container in docker:
In Docker In K8s config What it does CMD args Command that will be executed when the container starts or alternatively arguments for the ENTRYPOINT of the container ENTRYPOINT command Specifies the command to run when the container starts (completely replacing Dockerfile ENTRYPOINT).</description></item></channel></rss>